service: sam-serverless

custom:
  usersTable: Users
  accessesTable: Accesses

provider:
  name: aws
  runtime: nodejs8.10
  region: ${opt:region, "ap-northeast-1"}
  profile: ${opt:profile, "default"}
  stage: ${opt:stage, "dev"}
  memorySize: 512 # optional, in MB, default is 1024
  timeout: 10 # optional, in seconds, default is 6
  versionFunctions: false # optional, default is true
  environment:
    USERS_TABLE: ${self:custom.usersTable}
    ACCESSES_TABLE: ${self:custom.accessesTable}
    REGION: ${self:provider.region}
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-northeast-1:*:*"

functions:
  putUser:
    handler: handler.putUser
    name: sam-server-putUser-${self:provider.stage}

  getUserStatus:
    handler: handler.getUserStatus
    name: sam-server-getUserStatus-${self:provider.stage}

  putUserEntry:
    handler: handler.putUserEntry
    name: sam-server-putUserEntry-${self:provider.stage}

  putUserExit:
    handler: handler.putUserExit
    name: sam-server-putUserExit-${self:provider.stage}

  getUsers:
    handler: handler.getUsers
    name: sam-server-getUsers-${self:provider.stage}

# you can add CloudFormation resource templates here
resources:
 Resources:
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      AttributeDefinitions:
        -
          AttributeName: cardId
          AttributeType: S
      KeySchema:
        -
          AttributeName: cardId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  AccessesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Accesses
      AttributeDefinitions:
        -
          AttributeName: userId
          AttributeType: S
        -
          AttributeName: date
          AttributeType: S
      KeySchema:
        -
          AttributeName: userId
          KeyType: HASH
        -
          AttributeName: date
          KeyType: RANGE
      GlobalSecondaryIndexes:
        -
          IndexName: date-index
          KeySchema:
            -
              AttributeName: date
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1


package:
#  include:
#    - include-me.js
exclude:
  - resources/**
